#!bin/bash 



# First, install necessary packages for apt repository management:
sudo apt-get install -y apt-transport-https ca-certificates curl gnupg

# Add the Kubernetes repository key to securely authenticate packages:
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# Add the Kubernetes repository to your system's list of package sources:
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

# Update the package lists to fetch information about the latest versions of packages available:
sudo apt-get update

# Install Kubernetes components including kubelet, kubeadm, and kubectl:
sudo apt-get install -y kubeadm=1.28.9-2.1 kubelet=1.28.9-2.1 kubectl=1.28.9-2.1


# To prevent accidental upgrades of Kubernetes packages, hold them at their current version:
sudo apt-mark hold kubelet kubeadm kubectl












# Initialising the control-plane node run the below command on the (master node)
sudo kubeadm init
# If we get error with iptables, execute the below ones on both master and worker
modprobe br_netfilter
echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables
echo 1 > /proc/sys/net/ipv4/ip_forward

# If we get error wrt container runtime not running , execute the below commands

rm /etc/containerd/config.toml
systemctl restart containerd

# Create the directory for kubeconfig file
mkdir -p $HOME/.kube

# Copy the admin.conf file to the kubeconfig directory
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

# Change ownership of the kubeconfig file to the current user
sudo chown $(id -u):$(id -g) $HOME/.kube/config


# Verify the cluster status by executing kubectl command on the master node
kubectl get nodes


#Install CNI so that pods can communicate across nodes and also Cluster DNS to start functioning. Apply weave CNI (Container Network Interface) on the master node
kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml
kubectl get nodes

"kuber.sh" 55L, 2127B                                                                                                                                55,0-1        Bot
